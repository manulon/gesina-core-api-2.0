version: '3.5'
services:
  redis:
    image: redis
    ports:
    - "6379:6379"
  web:
   build:
     context: .
     dockerfile: Dockerfile
   environment:
     - BROKER_URL=redis://redis:6379/0 # para encolar
     - RESULT_BACKEND=redis://redis:6379/0 # para guardar el resultado
     - MINIO_URL=minio:9000
     - DATABASE_HOST=database:5432
     - PYTHONPATH=/app/
   volumes:
     - .:/app/
   depends_on:
     - redis
     - database
   ports:
     - "5001:5001"
  database:
      image: postgres:latest
      restart: always
      volumes:
        - database:/var/lib/postgresql/data
        - ./docker-entrypoint.sql:/docker-entrypoint-initdb.d/docker-entrypoint.sql
      environment:
        POSTGRES_PASSWORD: password
        POSTGRES_USER: user
        POSTGRES_DB: main
      ports:
        - 5432:5432
  minio:
      image: minio/minio:RELEASE.2021-07-22T05-23-32Z
      ports:
        - "9000:9000"
        - "9001:9001"
      volumes:
        - ./minio_data:/data
      environment:
        - MINIO_ROOT_USER=minioadmin
        - MINIO_ROOT_PASSWORD=password
        - MINIO_STORAGE_USE_HTTPS=False
      command: server /data --console-address ":9001"
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile-Scheduler
    environment:
      - BROKER_URL=redis://redis:6379/0 # para encolar
      - RESULT_BACKEND=redis://redis:6379/0 # para guardar el resultado
      - MINIO_URL=minio:9000
      - DATABASE_HOST=database:5432
      - PYTHONPATH=/app/
    volumes:
      - .:/app/
    depends_on:
      - redis
      - database
  test:
    image: api-tests
    build:
      context: .
      dockerfile: test/Dockerfile
    entrypoint: newman
    command: run final_tests.postman_collection.json  --environment=testing.postman_environment.json --env-var="BaseUrl=http://${HOST_IP}:5001" --reporters cli
    depends_on:
      - web
volumes:
  database:
